server:
  port: ${SERVER_PORT:3003}

spring:
  application:
    name: parking-management
    version: ${APP_VERSION:1.0.0}
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  devtools:
    add-properties: false
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/parking_management
    username: postgres
    password: postgres
  flyway:
    enabled: true
    baseline-on-migrate: true
    url: jdbc:postgresql://localhost:5432/parking_management
    user: postgres
    password: postgres
  docker:
    compose:
      enabled: true
      file: src/main/docker/docker-compose.yml
      profiles:
        active: ${spring.profiles.active}
      start:
        arguments: -d
      stop:
        command: down

resilience4j:
  circuitbreaker:
    instances:
      parkingClientCB:
        register-health-indicator: true
        sliding-window-size: 10
        sliding-window-type: count_based
        failure-rate-threshold: 75
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        minimum-number-of-calls: 5
  retry:
    instances:
      parkingClientRetry:
        max-attempts: 3
        wait-duration: 10s
  timelimiter:
    instances:
      parkingClientLimiter:
        timeout-duration: 2s
        cancel-running-future: true

client:
  garage:
    url: ${GARAGE_API_URL:http://localhost:3000}

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
  info:
    title: "Parking Management API"
    description: "API para gestão de estacionamentos, incluindo veículos, vagas e receitas."
    version: ${APP_VERSION:1.0.0}
    contact:
      name: "Martins Java Code"
      url: "https://github.com/martinsjavacode"
      email: "amartins.alexandre@outlook.com"
    license:
      name: "MIT License"
      url: "https://opensource.org/licenses/MIT"

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%X{traceId}] %-5level %logger{36} - %msg%n"
  level:
    root: INFO
    org.flywaydb: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
