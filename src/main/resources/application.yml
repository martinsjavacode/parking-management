server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: parking-management
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  devtools:
    add-properties: false
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/parking_management
    username: postgres
    password: postgres
    pool:
      initial-size: 10
      max-size: 30
      max-idle-time: 30m
  flyway:
    enabled: true
    baseline-on-migrate: true
    url: jdbc:postgresql://localhost:5432/parking_management
    user: postgres
    password: postgres
  docker:
    compose:
      enabled: ${DOCKER_COMPOSE_ENABLED:false}
      file: src/main/docker/docker-compose.yml
      profiles:
        active: ${spring.profiles.active}
      start:
        arguments: -d
      stop:
        command: down
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000
      connect-timeout: 2000

client:
  garage:
    url: ${GARAGE_API_URL:http://localhost:3000}

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
  info:
    title: "Parking Management API"
    description: "API para gestão de estacionamentos, incluindo veículos, vagas e receitas."
    version: ${APP_VERSION:1.0.0}
    contact:
      name: "Martins Java Code"
      url: "https://github.com/martinsjavacode"
      email: "amartins.alexandre@outlook.com"
    license:
      name: "MIT License"
      url: "https://opensource.org/licenses/MIT"

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    io.github.martinsjavacode: INFO
    org.springframework.r2dbc: INFO
    org.springframework.data.redis: INFO
